# Generated by Django 5.1.6 on 2025-03-07 18:16

import datetime
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Contract",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default="Mietervertrag", max_length=255
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("uploaded", "Uploaded"),
                            ("processing", "Processing"),
                            ("analyzed", "Analyzed"),
                        ],
                        default="uploaded",
                        max_length=20,
                    ),
                ),
                ("archived", models.BooleanField(default=False)),
                ("archived_date", models.DateTimeField(blank=True, null=True)),
                ("retention_days", models.IntegerField(default=365)),
                ("scheduled_deletion_date", models.DateField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContractDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contract_type",
                    models.CharField(
                        choices=[
                            ("unlimited", "Unlimited Contract"),
                            ("limited", "Limited Contract"),
                            ("qualified_limited", "Qualified Limited Contract"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("street", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=10)),
                ("country", models.CharField(default="Germany", max_length=100)),
                (
                    "property_type",
                    models.CharField(
                        choices=[
                            ("apartment", "Apartment"),
                            ("house", "House"),
                            ("commercial", "Commercial"),
                            ("room", "Room"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "number_of_rooms",
                    models.DecimalField(decimal_places=1, max_digits=3),
                ),
                (
                    "living_space",
                    models.DecimalField(
                        decimal_places=2, help_text="In square meters", max_digits=8
                    ),
                ),
                (
                    "year_of_construction",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1800),
                            django.core.validators.MaxValueValidator(2025),
                        ]
                    ),
                ),
                ("kitchen", models.BooleanField(default=False)),
                ("bathroom", models.BooleanField(default=False)),
                ("separate_wc", models.BooleanField(default=False)),
                ("balcony_or_terrace", models.BooleanField(default=False)),
                ("garden", models.BooleanField(default=False)),
                ("garage_or_parking_space", models.BooleanField(default=False)),
                (
                    "garage_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("elevator", models.BooleanField(default=False)),
                (
                    "energy_class",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A+", "A+"),
                            ("A", "A"),
                            ("B", "B"),
                            ("C", "C"),
                            ("D", "D"),
                            ("E", "E"),
                            ("F", "F"),
                            ("G", "G"),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "energy_consumption",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("num_apartment_keys", models.PositiveIntegerField(default=1)),
                ("num_mailbox_keys", models.PositiveIntegerField(default=1)),
                ("num_building_keys", models.PositiveIntegerField(default=1)),
                ("num_garage_keys", models.PositiveIntegerField(default=0)),
                (
                    "termination_notice_period_tenant",
                    models.PositiveIntegerField(
                        default=3, help_text="Notice period in months for tenant"
                    ),
                ),
                (
                    "termination_notice_period_landlord",
                    models.PositiveIntegerField(
                        default=3, help_text="Notice period in months for landlord"
                    ),
                ),
                (
                    "deposit_amount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "deposit_payment_method",
                    models.CharField(
                        choices=[
                            ("bank_transfer", "Bank Transfer"),
                            ("cash", "Cash"),
                            ("installments", "Installments"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "rent_due_date",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Day of month when rent is due",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(31),
                        ],
                    ),
                ),
                ("landlord_account_holder", models.CharField(max_length=255)),
                ("landlord_bank_name", models.CharField(max_length=255)),
                ("landlord_iban", models.CharField(max_length=34)),
                (
                    "cosmetic_repairs_responsibility",
                    models.CharField(
                        choices=[
                            ("tenant", "Tenant"),
                            ("landlord", "Landlord"),
                            ("shared", "Shared"),
                        ],
                        default="tenant",
                        max_length=10,
                    ),
                ),
                (
                    "small_repairs_responsibility",
                    models.CharField(
                        choices=[
                            ("tenant", "Tenant"),
                            ("landlord", "Landlord"),
                            ("shared", "Shared"),
                        ],
                        default="tenant",
                        max_length=10,
                    ),
                ),
                (
                    "small_repairs_cost_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum cost per repair that tenant is responsible for",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "renovation_interval_walls",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Renovation interval for walls in years",
                        null=True,
                    ),
                ),
                (
                    "renovation_interval_woodwork",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Renovation interval for woodwork in years",
                        null=True,
                    ),
                ),
                ("pets_allowed", models.BooleanField(default=False)),
                ("subletting_allowed", models.BooleanField(default=False)),
                ("subletting_requires_permission", models.BooleanField(default=True)),
                ("quiet_hours_start", models.TimeField(default=datetime.time(22, 0))),
                ("quiet_hours_end", models.TimeField(default=datetime.time(7, 0))),
                ("has_shared_garden", models.BooleanField(default=False)),
                ("has_shared_laundry", models.BooleanField(default=False)),
                ("has_shared_washing_machine", models.BooleanField(default=False)),
                (
                    "contract_date",
                    models.DateField(help_text="Date when contract was signed"),
                ),
                ("signing_location", models.CharField(max_length=100)),
                (
                    "contract",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="details",
                        to="contract_analysis.contract",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContractFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.CharField(blank=True, default="", max_length=255)),
                ("file_content", models.BinaryField(null=True)),
                ("file_type", models.CharField(default="image/png", max_length=20)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("file_size", models.IntegerField(default=0)),
                ("encrypted_content", models.BinaryField(null=True)),
                (
                    "contract",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="contract_analysis.contract",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="contract",
            index=models.Index(
                fields=["user", "status"], name="contract_an_user_id_26593c_idx"
            ),
        ),
    ]
